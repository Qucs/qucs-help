#
msgid ""
msgstr ""
"Project-Id-Version: Qucs Help 0.0.19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-16 15:55+0100\n"
"PO-Revision-Date: 2014-12-17 21:55+0100\n"
"Last-Translator: Guilherme Brondani Torri <guitorri@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: cs\n"
"X-Generator: Poedit 1.6.7\n"

#: ../../source/start_digi.rst:3
msgid "Getting Started with Digital Simulations"
msgstr "Začínáme s Digitálními sumulacemi"

#: ../../source/start_digi.rst:6
msgid ""
"Qucs is also a graphical user interface for performing digital simulations. "
"This document should give you a short description on how to use it."
msgstr ""
"Qucs obsahuje také grafické rozhraní umožňující digitální simulace. Tento "
"manuál by vám měl ukázat \"Jak nato\"."

#: ../../source/start_digi.rst:10
msgid ""
"For digital simulations Qucs uses the FreeHDL program (`http://www.freehdl."
"seul.org <http://www.freehdl.seul.org>`__). So the FreeHDL package as well "
"as the GNU C++ compiler must be installed on the computer."
msgstr ""
"Pro digitální simulace Qucs používá FreeHDL program (http://www.freehdl.seul."
"org) , takže FreeHDL a GNU C++ kompilátor musí být nainstalován na vašem "
"počítači."

#: ../../source/start_digi.rst:15
msgid ""
"There is no big difference in running an analog or a digital simulation. So "
"having read the `Getting Started for analog simulations <start.html>`__, it "
"is now easy to get a digital simulation work. Let us compute the truth table "
"of a simple logical AND cell. Select the digital components in the combobox "
"of the components tab on the left-hand side and build the circuit shown in "
"figure 1. The digital simulation block can be found among the other "
"simulation blocks."
msgstr ""
"Zde není příliš velký rozdíl mezi zprovozněním analogové, nebo digitální "
"simulace. Takže pokud jste si přečetli manuál `Začínáme s analogovými "
"simulacemi <start.html>`__, bude pro vás hračka zprovoznit digitální "
"simulaci. Pokud chcete, aby hradlo AND vypadalo jako na ukázkovém obrázku, "
"pak dvakrát klikněte na hradlo a u položky \"Symbol\" změňte \"Old\" na "
"\"DIN40900\". Nechme na programu, aby nám vypočítal pravdivostní tabulku z "
"jednoduchého hradla AND. Vyberte ze skupiny komponent digitální komponenty v "
"comboboxu. Čtverec \"Digitální simulace\" naleznete v kategorii skupin "
"konponent \"Simulace\"."

#: ../../source/start_digi.rst:23
msgid ""
"The digital sources *S1* and *S2* are the inputs, the node labeled as "
"*Output* is the output. After performing the simulation, the data display "
"page opens. Place the diagram *truth table* on it and insert the variable "
"*Output*. Now the truth table of a two-port AND cell is shown. "
"Congratulation, the first digital simulation is done!"
msgstr ""
"Digitální zdroje S1 a S2 jsou vstupy. Uzel nadepsaný jako Output je výstup. "
"Po provedení simulace se otevře okno, ve kterém se vypisují data ze "
"simulace. Umístěte diagram Logická tabulka (Pradivostní tabulka). Vyberte "
"proměnnout Output. Nyní se nám zobrazí pravdivostní tabulka dvou-vstupového "
"hradla AND. Gratuluji, první digitální simulace je hotová!"

#: ../../source/start_digi.rst:32
msgid "Figure 1 - Qucs main window"
msgstr "Obrázek 1 - Qucs - hlavní okno"

#: ../../source/start_digi.rst:37
msgid ""
"A truth table is not the only digital simulation that Qucs can perform. It "
"is also possible to apply an arbitrary signal to a circuit and see the "
"output signal in a timing diagram. To do so, the parameter *Type* of the "
"simulation block must be changed to *TimeList* and the duration of the "
"simulation must be entered in the next parameter. The digital sources have "
"now a different meaning: They can output an arbitrary bit sequence by "
"defining the first bit (low or high) and a list that sets the times until "
"the next change of state. Note that this list repeats itself after its end. "
"So, to create a 1GHz clock with pulse ratio 1:1, the list writes: 0.5ns; "
"0.5ns"
msgstr ""
"Pravdivostní tabluka není jediné, co Qucs zvládne. Je zde také možnost "
"poslat náhodný signál do obvodu a podívat se na na výstup v časovém "
"diagramu. Pro to ale musíme změnit parametr simulace. Vraťte se ke schématu "
"a změňte v Type (stačí jednou kliknout) TruthTable na TimeList. Nebo "
"jednodušeji dvakrát klikněte na ikonu \"Digitální simulace\" a zde změňte "
"\"TruthTable\" na \"TimeList\". Ale během simulace musí být zadán další "
"parametr. Digitální zdroje se nyní chovají jinak. Na jejich výstupech se "
"náhodně mění sekvence bitů od prvního (definovaného) bitu (logická \"0\" "
"nebo logická \"1\"). Dále je třeba nastavit seznam, kerý bude určovat kdy se "
"bude měnit jejich logické stavy. Po \"přečtení\" tohoto seznamu se \"přečte"
"\" ještě jednou a pak se program ukončí. Takže vytvořme generátor s "
"taktovací frekvencí 1GHz se střídou 1:1, do listu se zapíše: 0.5ns, 0.5ns"

#: ../../source/start_digi.rst:48
msgid ""
"To display the result of this simulation type, there is the diagram *timing "
"diagram*. Here, the result of all output nodes can be shown row by row in "
"one diagram. So, let's have fun..."
msgstr ""
"Pro zobrazení výsledků typu této simualce je zde navržený diagram Časový "
"diagram. Zde mohou býte zobrazeny výsledky všech výstupů za sebou na "
"řádkách. Takže, teď si můžete hrát ;-)"

#: ../../source/start_digi.rst:55
msgid "VHDL File Component"
msgstr "Komponenta VHDL soubor"

#: ../../source/start_digi.rst:58
msgid ""
"More complex and more universal simulations can be performed using the "
"component \"VHDL file\". This component can be picked up from the component "
"list view (section \"digital components\"). Nevertheless the recommended "
"usage is the following: The VHDL file should be a member of the project. "
"Then go to the content list view and click on the file name. After entering "
"the schematic area, the VHDL component can be placed."
msgstr ""
"Více složité a více univerzální simulace mohou být zrealizovány použitím "
"komponenty \"VHDL soubor\". Tuto komponentu můžete najít v skupině komponent "
"\"Digitální komponenty\". Přesto je však doporučeno, že VHDL soubor by měl "
"být součástí projektu. Vraťte se zpět na \"Obsah\" a kllikněte na název "
"souboru. Po \"vstupu\" do schématu by se měla komponenta VHDL vložit"

#: ../../source/start_digi.rst:66
msgid ""
"The last entity block in the VHDL file defines the interface, that is, all "
"input and output ports must be declared here. These ports are also shown by "
"the schematic symbol and can be connected to the rest of the circuit. During "
"simulation the source code of the VHDL file is placed into the top-level "
"VHDL file. This must be considered as it causes some limitations. For "
"example, the entity names within the VHDL file must differ from names "
"already given to subcircuits. (After a simulation, the complete source code "
"can be seen by pressing F6. Use it to get a feeling for this procedure.)"
msgstr ""
"Poslední část ve VHDL souboru definuje prostředí, to jsou všechny vstupy a "
"mýstupy. Ty také musejí být deklarovány právě zde. Kontakty jsou rovněž ve "
"schématu a mohou být propojeny se zbytkem obvodu. Během simulace je zdrojový "
"kód VHDL souboru umístěn do nejvyšší úrovně VHDL souboru. Toto musí být "
"šetrné kvůli jistým limitacím. Například celky názvů ve VHDL souboru musí "
"být různé než jsou názvy vnořených obvodů. Po simulaci můžete zobrazit "
"kompletní zdrojový kód stisknutím klávesy F6. Zobrazte si jej pokud se "
"chcete o této proceduře dozvědět více."

#: ../../source/start_digi.rst:30
msgid "|image0_EN|"
msgstr "|image0_CS|"
